//
//  Questions.swift
//  TimeToThink
//
//  Created by Savonevich Constantine on 5/12/19.
//  Copyright ¬© 2019 Savonevich Konstantin. All rights reserved.
//

struct Questions {
    var text: String?
    var responseType: ResponseType
    var answers: [Answers]?
}


extension Questions {
    static func loadData() -> [Questions] {
        return [
            // MARK: - Questions for selectedTestType.car
            Questions(
                text: "–ö–∞–∫ –¥–∞–≤–Ω–æ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ?",
                responseType: .single,
                answers: [
                    Answers(text: "–ï—â—ë –Ω–µ –ø–æ–ª—É—á–∞–ª", answerType: .carHatchback),
                    Answers(text: "–ú–µ–Ω—å—à–µ 2 –ª–µ—Ç", answerType: .carSedan),
                    Answers(text: "–û—Ç 2 –¥–æ 5 –ª–µ—Ç", answerType: .carPikup),
                    Answers(text: "–ë–æ–ª—å—à–µ 5 –ª–µ—Ç", answerType: .carSuv)
                ]
            ),
            Questions(
                text: "–ö–µ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?",
                responseType: .multiple,
                answers: [
                    Answers(text: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º", answerType: .carSedan),
                    Answers(text: "–§–µ—Ä–º–µ—Ä–æ–º", answerType: .carPikup),
                    Answers(text: "–ö—É—Ä—å–µ—Ä–æ–º", answerType: .carHatchback),
                    Answers(text: "–ë–∞–Ω–∫–∏—Ä–æ–º", answerType: .carSuv),
                    Answers(text: "–ö–ª–æ—É–Ω–æ–º", answerType: .carMinivan)
                ]
            ),
            Questions(
                text: "–ù–∞—Å–∫–æ–ª—å–∫–æ –±–æ–ª—å—à–∞—è –≤–∞—à–∞ —Å–µ–º—å—è?",
                responseType: .ranged,
                answers: [
                    Answers(text: "üôç‚Äç‚ôÇÔ∏è", answerType: .carHatchback),
                    Answers(text: "", answerType: .carSedan),
                    Answers(text: "", answerType: .carPikup),
                    Answers(text: "", answerType: .carSuv),
                    Answers(text: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶", answerType: .carMinivan)
                ]
            ),
            
            // MARK: - Questions for selectedTestType.sport
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .single,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .sportSwimming),
                    Answers(text: "–†—ã–±–∞", answerType: .sportFootball),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .sportHockey),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .sportChess),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .sportWrestling)
                ]
            ),
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .multiple,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .sportSwimming),
                    Answers(text: "–†—ã–±–∞", answerType: .sportFootball),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .sportHockey),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .sportChess),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .sportWrestling)
                ]
            ),
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .ranged,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .sportSwimming),
                    Answers(text: "–†—ã–±–∞", answerType: .sportFootball),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .sportHockey),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .sportChess),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .sportWrestling)
                ]
            ),
            
            // MARK: - Questions for selectedTestType.animal
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .single,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .animalDog),
                    Answers(text: "–†—ã–±–∞", answerType: .animalCat),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .animalRabbit),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .animalTurtle)
                ]
            ),
            Questions(
                text: "–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–µ–ª–∞—Ç—å?",
                responseType: .multiple,
                answers: [
                    Answers(text: "–ü–ª–∞–≤–∞—Ç—å", answerType: .animalTurtle),
                    Answers(text: "–°–ø–∞—Ç—å", answerType: .animalCat),
                    Answers(text: "–û–±–Ω–∏–º–∞—Ç—å—Å—è", answerType: .animalRabbit),
                    Answers(text: "–ï—Å—Ç—å", answerType: .animalDog),
                    Answers(text: "–ì—É–ª—è—Ç—å", answerType: .animalDog)
                ]
            ),
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .ranged,
                answers: [
                    Answers(text: "–ù–µ–Ω–∞–≤–∏–∂—É", answerType: .animalCat),
                    Answers(text: "–ù–µ—Ä–≤–Ω–∏—á–∞—é", answerType: .animalRabbit),
                    Answers(text: "–ù–µ –∑–∞–º–µ—á–∞—é", answerType: .animalTurtle),
                    Answers(text: "–û–±–æ–∂–∞—é", answerType: .animalDog)
                ]
            ),
            
            // MARK: - Questions for selectedTestType.pizza
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .single,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .pizzaMargarita),
                    Answers(text: "–†—ã–±–∞", answerType: .pizzaPepperoni),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .pizzaHawaiian),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .pizzaMushrooms)
                ]
            ),
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .multiple,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .pizzaMargarita),
                    Answers(text: "–†—ã–±–∞", answerType: .pizzaPepperoni),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .pizzaHawaiian),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .pizzaMushrooms)
                ]
            ),
            Questions(
                text: "–ö–∞–∫—É—é –ø–∏—â—É –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .ranged,
                answers: [
                    Answers(text: "–°—Ç–µ–π–∫", answerType: .pizzaMargarita),
                    Answers(text: "–†—ã–±–∞", answerType: .pizzaPepperoni),
                    Answers(text: "–ú–æ—Ä–∫–æ–≤–∫–∞", answerType: .pizzaHawaiian),
                    Answers(text: "–ö—É–∫—É—Ä—É–∑–∞", answerType: .pizzaMushrooms)
                ]
            )
        ]
    }
}
